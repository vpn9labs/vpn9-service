# Multi-stage build for VPN9 Agent
# Stage 1: Build the application
FROM rust:1.89-slim AS builder

# Install required system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    protobuf-compiler \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy workspace files
COPY Cargo.toml ./

# Copy source code
COPY vpn9-core/ ./vpn9-core/
COPY vpn9-agent/ ./vpn9-agent/
COPY vpn9-control-plane/ ./vpn9-control-plane/

# Build the agent (release mode for smaller binary)
RUN cargo build --release --bin vpn9-agent

# Stage 2: Runtime image
FROM debian:12-slim AS runtime

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    wireguard-tools \
    iptables \
    && rm -rf /var/lib/apt/lists/* \
    && update-ca-certificates

# Create non-root user for security
RUN useradd -r -s /bin/false vpn9-agent

# Create directories
RUN mkdir -p /opt/vpn9/config && \
    chown -R vpn9-agent:vpn9-agent /opt/vpn9

# Copy the built binary from builder stage
COPY --from=builder /app/target/release/vpn9-agent /usr/local/bin/vpn9-agent

# Make binary executable
RUN chmod +x /usr/local/bin/vpn9-agent

# Set working directory
WORKDIR /opt/vpn9

# Switch to non-root user
USER vpn9-agent

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD pgrep vpn9-agent || exit 1

# Set environment variables
ENV RUST_LOG=info
ENV VPN9_AGENT_VERSION=1.0.0
ENV VPN9_CONFIG_PATH=/opt/vpn9/config

# Run the agent
CMD ["vpn9-agent"]
